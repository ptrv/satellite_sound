{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs66 \cf0 \
\
		
\fs70 \cf2 Satellite Sound
\fs66 \cf0  \
		\

\fs52 \
		Peter Vasil\

\fs44 		\

\fs38 		\
		Klanganalyse und -synthese, TU Berlin, SS11\
		\
		\
		\
		\
	\
	\
	\
	\
	\
	\
	\
	
\fs42 GPS Log files for controling sound\
	\
	- GPS Project\
	  {\field{\*\fldinst{HYPERLINK "http://www.planbperformance.net/dan/mapping.htm"}}{\fldrslt 
\fs34 http://www.planbperformance.net/dan/mapping.htm}}\
	- Satellite information \
	\
	\
	\
	\
	\
	\
	\
	\
\
	\
	Reading satellite data\
	\
	- satellite data saved as binary OSC bundles\
	- Python script for reading and saving OSC bundles\
	\
	\
	\
	\
	\
	\
	\
	\
	\
	8 channel sound texture\
	\
	- satellite information as parameters\
		- angle -> spatial positioning\
		- noise -> modulation\
		- elevation -> amplitude\
	- Fibonacci sequence -> rhythm, ...\
	- Gendy3 UGen\
	- TODO: control amplitude with pattern\
	- TODO: use local information\
	\
	\

\fs38 \
\
\
\
\
\
			
\fs152 Demo
\fs38 \
\
\
\
\
\
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs26 \cf0 \
\
\
\
\
\
(
\fs38 \

\fs24 Document.open(Document.current.dir ++ "/sc/satellite.scd");
\fs26 \

\fs24 Document.open(Document.current.dir ++ "/sc/helper.scd");
\fs26 \
)\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}